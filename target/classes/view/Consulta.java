/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Dao.ConsultaDao;
import Dao.MedicoDao;
import Dao.PacienteDao;
import java.awt.Component;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import model.ConsultaModel;
import model.MedicoModel;
import model.Opcao;
import model.PacienteModel;

/**
 *
 * @author Wanderson
 */
public class Consulta extends javax.swing.JInternalFrame {

    /**
     * Creates new form Consulta
     */
    Opcao opcao;
    ArrayList<MedicoModel> medicos;
    ArrayList<PacienteModel> pacientes;
    ArrayList<ConsultaModel> consultas;
    MedicoDao medicoDao;
    PacienteDao pacienteDao;
    ConsultaDao consultaDao;
    int crm;
    String cpf;

    public Consulta() {
        initComponents();
        jTabbedPane1.setEnabled(false);
        medicoDao = new MedicoDao();
        pacienteDao = new PacienteDao();
        consultaDao = new ConsultaDao();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        cadastrar = new javax.swing.JPanel();
        jlSelecioneCad = new javax.swing.JLabel();
        jlMedicoCad = new javax.swing.JLabel();
        jlPacienteCad = new javax.swing.JLabel();
        cbxMedicoCad = new javax.swing.JComboBox<>();
        cbxPacienteCad = new javax.swing.JComboBox<>();
        jpCamposCad = new javax.swing.JPanel();
        jlDataCad = new javax.swing.JLabel();
        jlHoraCad = new javax.swing.JLabel();
        btnDataHoraAtualCad = new javax.swing.JButton();
        cbxDiaCad = new javax.swing.JComboBox<>();
        cbxMesCad = new javax.swing.JComboBox<>();
        cbxAnoCad = new javax.swing.JComboBox<>();
        cbxHoraCad = new javax.swing.JComboBox<>();
        cbxMinCad = new javax.swing.JComboBox<>();
        btnSalvarCad = new javax.swing.JButton();
        btnFecharCad = new javax.swing.JButton();
        consultar = new javax.swing.JPanel();
        jpCamposCons = new javax.swing.JPanel();
        jlDataCons = new javax.swing.JLabel();
        jlHoraCons = new javax.swing.JLabel();
        jlMedicoCons = new javax.swing.JLabel();
        jlPacienteCons = new javax.swing.JLabel();
        tfMedicoCons = new javax.swing.JTextField();
        tfPacienteCons = new javax.swing.JTextField();
        tfDataCons = new javax.swing.JTextField();
        tfHoraCons = new javax.swing.JTextField();
        btnFecharCons = new javax.swing.JButton();
        jlSelecioneConsultaCons = new javax.swing.JLabel();
        cbxConsultaCons = new javax.swing.JComboBox<>();
        alterar = new javax.swing.JPanel();
        jpCamposAlt = new javax.swing.JPanel();
        jlDataAlt = new javax.swing.JLabel();
        jlHoraAlt = new javax.swing.JLabel();
        btnDataHoraAtualAlt = new javax.swing.JButton();
        cbxDiaAlt = new javax.swing.JComboBox<>();
        cbxMesAlt = new javax.swing.JComboBox<>();
        cbxAnoAlt = new javax.swing.JComboBox<>();
        cbxHoraAlt = new javax.swing.JComboBox<>();
        cbxMinAlt = new javax.swing.JComboBox<>();
        jlMedicoAlt = new javax.swing.JLabel();
        cbxMedicoAlt = new javax.swing.JComboBox<>();
        jlSelecioneAlt = new javax.swing.JLabel();
        jlPacienteAlt = new javax.swing.JLabel();
        cbxPacienteAlt = new javax.swing.JComboBox<>();
        btnSalvarAlt = new javax.swing.JButton();
        btnFecharAlt = new javax.swing.JButton();
        cbxConsultaAlt = new javax.swing.JComboBox<>();
        jlSelecioneConsultaAlt = new javax.swing.JLabel();
        excluir = new javax.swing.JPanel();
        btnFecharExc = new javax.swing.JButton();
        jpExclui = new javax.swing.JPanel();
        jlDataExc = new javax.swing.JLabel();
        jlHoraExc = new javax.swing.JLabel();
        jlMedicoExc = new javax.swing.JLabel();
        jlPacienteExc = new javax.swing.JLabel();
        tfMedicoExc = new javax.swing.JTextField();
        tfPacienteExc = new javax.swing.JTextField();
        tfHoraExc = new javax.swing.JTextField();
        tfDataExc = new javax.swing.JTextField();
        btnExcluir = new javax.swing.JButton();
        jlSelecioneConsultaEx = new javax.swing.JLabel();
        cbxConsultaExc = new javax.swing.JComboBox<>();

        jTabbedPane1.setDoubleBuffered(true);

        cadastrar.setEnabled(false);

        jlSelecioneCad.setText("Selecione");

        jlMedicoCad.setText("Médico");

        jlPacienteCad.setText("Paciente");

        jlDataCad.setText("Data");

        jlHoraCad.setText("Hora");

        btnDataHoraAtualCad.setText("Data e hora atual");
        btnDataHoraAtualCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataHoraAtualCadActionPerformed(evt);
            }
        });

        cbxDiaCad.setMaximumRowCount(4);
        cbxDiaCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cbxMesCad.setMaximumRowCount(4);
        cbxMesCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro" }));

        cbxAnoCad.setMaximumRowCount(4);
        cbxAnoCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", " " }));

        cbxHoraCad.setMaximumRowCount(4);
        cbxHoraCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " 00", " 01", " 02", " 03", " 04", " 05", " 06", " 07", " 08", " 09", " 10", " 11", " 12", " 13", " 14", " 15", " 16", " 17", " 18", " 19", " 20", " 21", " 22", " 23", " " }));

        cbxMinCad.setMaximumRowCount(4);
        cbxMinCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " 00", " 01", " 02", " 03", " 04", " 05", " 06", " 07", " 08", " 09", " 10", " 11", " 12", " 13", " 14", " 15", " 16", " 17", " 18", " 19", " 20", " 21", " 22", " 23", " 24", " 25", " 26", " 27", " 28", " 29", " 30", " 31", " 32", " 33", " 34", " 35", " 36", " 37", " 38", " 39", " 40", " 41", " 42", " 43", " 44", " 45", " 46", " 47", " 48", " 49", " 50", " 51", " 52", " 53", " 54", " 55", " 56", " 57", " 58", " 59" }));

        javax.swing.GroupLayout jpCamposCadLayout = new javax.swing.GroupLayout(jpCamposCad);
        jpCamposCad.setLayout(jpCamposCadLayout);
        jpCamposCadLayout.setHorizontalGroup(
            jpCamposCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposCadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCamposCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposCadLayout.createSequentialGroup()
                        .addComponent(jlDataCad)
                        .addGap(18, 18, 18)
                        .addComponent(cbxDiaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMesCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxAnoCad, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCamposCadLayout.createSequentialGroup()
                        .addComponent(jlHoraCad)
                        .addGap(18, 18, 18)
                        .addComponent(cbxHoraCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMinCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDataHoraAtualCad)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpCamposCadLayout.setVerticalGroup(
            jpCamposCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposCadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCamposCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxDiaCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxMesCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxAnoCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlDataCad))
                .addGap(18, 18, 18)
                .addGroup(jpCamposCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlHoraCad)
                    .addComponent(cbxHoraCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMinCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDataHoraAtualCad))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvarCad.setText("Salvar");
        btnSalvarCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCadActionPerformed(evt);
            }
        });

        btnFecharCad.setText("Fechar");
        btnFecharCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharCadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cadastrarLayout = new javax.swing.GroupLayout(cadastrar);
        cadastrar.setLayout(cadastrarLayout);
        cadastrarLayout.setHorizontalGroup(
            cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnSalvarCad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFecharCad)
                .addGap(94, 94, 94))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastrarLayout.createSequentialGroup()
                .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cadastrarLayout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addComponent(jpCamposCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cadastrarLayout.createSequentialGroup()
                        .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cadastrarLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cbxMedicoCad, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cadastrarLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jlMedicoCad)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastrarLayout.createSequentialGroup()
                                .addComponent(jlPacienteCad)
                                .addGap(47, 47, 47))
                            .addComponent(cbxPacienteCad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31))
            .addGroup(cadastrarLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jlSelecioneCad)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cadastrarLayout.setVerticalGroup(
            cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarLayout.createSequentialGroup()
                .addComponent(jlSelecioneCad)
                .addGap(1, 1, 1)
                .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlMedicoCad)
                    .addComponent(jlPacienteCad))
                .addGap(18, 18, 18)
                .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxPacienteCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMedicoCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jpCamposCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarCad)
                    .addComponent(btnFecharCad))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Cadastrar", cadastrar);

        consultar.setEnabled(false);

        jlDataCons.setText("Data");

        jlHoraCons.setText("Hora");

        jlMedicoCons.setText("Médico");

        jlPacienteCons.setText("Paciente");

        tfMedicoCons.setEditable(false);

        tfPacienteCons.setEditable(false);

        tfDataCons.setEditable(false);

        tfHoraCons.setEditable(false);

        javax.swing.GroupLayout jpCamposConsLayout = new javax.swing.GroupLayout(jpCamposCons);
        jpCamposCons.setLayout(jpCamposConsLayout);
        jpCamposConsLayout.setHorizontalGroup(
            jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposConsLayout.createSequentialGroup()
                .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposConsLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jlMedicoCons)
                        .addGap(17, 17, 17)
                        .addComponent(tfMedicoCons, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCamposConsLayout.createSequentialGroup()
                        .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCamposConsLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jlPacienteCons))
                            .addGroup(jpCamposConsLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jlDataCons))
                            .addGroup(jpCamposConsLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jlHoraCons)))
                        .addGap(12, 12, 12)
                        .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfHoraCons, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDataCons, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPacienteCons, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6))
        );
        jpCamposConsLayout.setVerticalGroup(
            jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposConsLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposConsLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jlMedicoCons))
                    .addComponent(tfMedicoCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposConsLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jlPacienteCons))
                    .addComponent(tfPacienteCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposConsLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jlDataCons))
                    .addGroup(jpCamposConsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfDataCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jpCamposConsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlHoraCons)
                    .addComponent(tfHoraCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        btnFecharCons.setText("Fechar");
        btnFecharCons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharConsActionPerformed(evt);
            }
        });

        jlSelecioneConsultaCons.setText("Selecione a consulta");

        cbxConsultaCons.setMaximumRowCount(4);
        cbxConsultaCons.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxConsultaConsItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout consultarLayout = new javax.swing.GroupLayout(consultar);
        consultar.setLayout(consultarLayout);
        consultarLayout.setHorizontalGroup(
            consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarLayout.createSequentialGroup()
                        .addComponent(btnFecharCons)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(consultarLayout.createSequentialGroup()
                        .addGroup(consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpCamposCons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarLayout.createSequentialGroup()
                                .addComponent(jlSelecioneConsultaCons)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxConsultaCons, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        consultarLayout.setVerticalGroup(
            consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxConsultaCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSelecioneConsultaCons))
                .addGap(47, 47, 47)
                .addComponent(jpCamposCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFecharCons)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultar", consultar);

        alterar.setEnabled(false);

        jlDataAlt.setText("Data");

        jlHoraAlt.setText("Hora");

        btnDataHoraAtualAlt.setText("Data e hora atual");
        btnDataHoraAtualAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataHoraAtualAltActionPerformed(evt);
            }
        });

        cbxDiaAlt.setMaximumRowCount(4);
        cbxDiaAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cbxMesAlt.setMaximumRowCount(4);
        cbxMesAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro" }));

        cbxAnoAlt.setMaximumRowCount(4);
        cbxAnoAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", " " }));

        cbxHoraAlt.setMaximumRowCount(4);
        cbxHoraAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " 00", " 01", " 02", " 03", " 04", " 05", " 06", " 07", " 08", " 09", " 10", " 11", " 12", " 13", " 14", " 15", " 16", " 17", " 18", " 19", " 20", " 21", " 22", " 23", " " }));

        cbxMinAlt.setMaximumRowCount(4);
        cbxMinAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " 00", " 01", " 02", " 03", " 04", " 05", " 06", " 07", " 08", " 09", " 10", " 11", " 12", " 13", " 14", " 15", " 16", " 17", " 18", " 19", " 20", " 21", " 22", " 23", " 24", " 25", " 26", " 27", " 28", " 29", " 30", " 31", " 32", " 33", " 34", " 35", " 36", " 37", " 38", " 39", " 40", " 41", " 42", " 43", " 44", " 45", " 46", " 47", " 48", " 49", " 50", " 51", " 52", " 53", " 54", " 55", " 56", " 57", " 58", " 59" }));

        jlMedicoAlt.setText("Médico");

        jlSelecioneAlt.setText("Selecione");

        jlPacienteAlt.setText("Paciente");

        javax.swing.GroupLayout jpCamposAltLayout = new javax.swing.GroupLayout(jpCamposAlt);
        jpCamposAlt.setLayout(jpCamposAltLayout);
        jpCamposAltLayout.setHorizontalGroup(
            jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCamposAltLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCamposAltLayout.createSequentialGroup()
                        .addComponent(jlDataAlt)
                        .addGap(18, 18, 18)
                        .addComponent(cbxDiaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMesAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxAnoAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpCamposAltLayout.createSequentialGroup()
                            .addComponent(jlHoraAlt)
                            .addGap(18, 18, 18)
                            .addComponent(cbxHoraAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cbxMinAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnDataHoraAtualAlt))
                        .addGroup(jpCamposAltLayout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxMedicoAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jpCamposAltLayout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addComponent(jlMedicoAlt)))
                            .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpCamposAltLayout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addComponent(jlSelecioneAlt)
                                    .addGap(42, 42, 42)
                                    .addComponent(jlPacienteAlt))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCamposAltLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxPacienteAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpCamposAltLayout.setVerticalGroup(
            jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCamposAltLayout.createSequentialGroup()
                .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlSelecioneAlt)
                    .addGroup(jpCamposAltLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlMedicoAlt)
                            .addComponent(jlPacienteAlt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxMedicoAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxPacienteAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDataAlt)
                    .addComponent(cbxDiaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMesAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxAnoAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpCamposAltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlHoraAlt)
                    .addComponent(cbxHoraAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMinAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDataHoraAtualAlt))
                .addContainerGap())
        );

        btnSalvarAlt.setText("Salvar");
        btnSalvarAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAltActionPerformed(evt);
            }
        });

        btnFecharAlt.setText("Fechar");
        btnFecharAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharAltActionPerformed(evt);
            }
        });

        cbxConsultaAlt.setMaximumRowCount(4);
        cbxConsultaAlt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxConsultaAltItemStateChanged(evt);
            }
        });

        jlSelecioneConsultaAlt.setText("Selecione a consulta");

        javax.swing.GroupLayout alterarLayout = new javax.swing.GroupLayout(alterar);
        alterar.setLayout(alterarLayout);
        alterarLayout.setHorizontalGroup(
            alterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alterarLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(btnSalvarAlt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(btnFecharAlt)
                .addGap(79, 79, 79))
            .addGroup(alterarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlSelecioneConsultaAlt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxConsultaAlt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(alterarLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jpCamposAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        alterarLayout.setVerticalGroup(
            alterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alterarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(alterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxConsultaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSelecioneConsultaAlt))
                .addGap(45, 45, 45)
                .addComponent(jpCamposAlt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(alterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarAlt)
                    .addComponent(btnFecharAlt))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Alterar", alterar);

        excluir.setEnabled(false);

        btnFecharExc.setText("Fechar");
        btnFecharExc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharExcActionPerformed(evt);
            }
        });

        jlDataExc.setText("Data");

        jlHoraExc.setText("Hora");

        jlMedicoExc.setText("Médico");

        jlPacienteExc.setText("Paciente");

        tfMedicoExc.setEditable(false);

        tfPacienteExc.setEditable(false);

        tfHoraExc.setEditable(false);

        tfDataExc.setEditable(false);

        javax.swing.GroupLayout jpExcluiLayout = new javax.swing.GroupLayout(jpExclui);
        jpExclui.setLayout(jpExcluiLayout);
        jpExcluiLayout.setHorizontalGroup(
            jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpExcluiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpExcluiLayout.createSequentialGroup()
                        .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlHoraExc)
                            .addComponent(jlDataExc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDataExc, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfHoraExc, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(187, 187, 187))
                    .addGroup(jpExcluiLayout.createSequentialGroup()
                        .addComponent(jlPacienteExc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPacienteExc))
                    .addGroup(jpExcluiLayout.createSequentialGroup()
                        .addComponent(jlMedicoExc)
                        .addGap(18, 18, 18)
                        .addComponent(tfMedicoExc)))
                .addContainerGap())
        );
        jpExcluiLayout.setVerticalGroup(
            jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpExcluiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlMedicoExc)
                    .addComponent(tfMedicoExc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPacienteExc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPacienteExc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDataExc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDataExc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jpExcluiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHoraExc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlHoraExc))
                .addContainerGap())
        );

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jlSelecioneConsultaEx.setText("Selecione a consulta");

        cbxConsultaExc.setMaximumRowCount(4);
        cbxConsultaExc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxConsultaExcItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout excluirLayout = new javax.swing.GroupLayout(excluir);
        excluir.setLayout(excluirLayout);
        excluirLayout.setHorizontalGroup(
            excluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(excluirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(excluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(excluirLayout.createSequentialGroup()
                        .addComponent(jpExclui, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(excluirLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnFecharExc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExcluir)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, excluirLayout.createSequentialGroup()
                        .addComponent(jlSelecioneConsultaEx)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxConsultaExc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        excluirLayout.setVerticalGroup(
            excluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, excluirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(excluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxConsultaExc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSelecioneConsultaEx))
                .addGap(47, 47, 47)
                .addComponent(jpExclui, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(excluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFecharExc)
                    .addComponent(btnExcluir))
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Excluir", excluir);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCadActionPerformed

        MedicoModel medico = medicos.get(cbxMedicoCad.getSelectedIndex());
        PacienteModel paciente = pacientes.get(cbxPacienteCad.getSelectedIndex());
        int dia, mes, ano;
        dia = cbxDiaCad.getSelectedIndex() + 1;
        mes = cbxMesCad.getSelectedIndex() + 1;
        ano = Integer.parseInt(cbxAnoCad.getSelectedItem().toString());
        LocalDate data = LocalDate.of(ano, mes, dia);
        LocalTime hora = LocalTime.of(cbxHoraCad.getSelectedIndex(), cbxMinCad.getSelectedIndex());
        ConsultaModel consulta = new ConsultaModel(medico, paciente, data, hora);
        int ret = consultaDao.cadastrar(consulta);
        if (ret == 1) {
            JOptionPane.showConfirmDialog(this, "Cadastrado com sucesso !", "Cadastrar", JOptionPane.DEFAULT_OPTION);
            if (JOptionPane.DEFAULT_OPTION == -1) {
                dispose();
            }
        }


    }//GEN-LAST:event_btnSalvarCadActionPerformed

    private void btnFecharCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharCadActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharCadActionPerformed

    private void cbxConsultaConsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxConsultaConsItemStateChanged
        ConsultaModel consulta = consultas.get(cbxConsultaCons.getSelectedIndex());
        tfMedicoCons.setText(consulta.getMedico().getNome());
        tfPacienteCons.setText(consulta.getPaciente().getNome());
        tfDataCons.setText(consulta.getData().toString());
        tfHoraCons.setText(consulta.getHora().toString());

    }//GEN-LAST:event_cbxConsultaConsItemStateChanged

    private void cbxConsultaAltItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxConsultaAltItemStateChanged
        ConsultaModel consulta = consultas.get(cbxConsultaAlt.getSelectedIndex());
        carregaCamposMedPac(cbxMedicoAlt, cbxPacienteAlt);

        for (int i = 0; i < cbxMedicoAlt.getItemCount(); i++) {
            if (cbxMedicoAlt.getItemAt(i).toString().equals(consulta.getMedico().getNome())) {
                cbxMedicoAlt.setSelectedIndex(i);
                for (MedicoModel medico : medicos) {
                    if (cbxMedicoAlt.getItemAt(i).toString().equals(medico.getNome())) {
                        crm = medico.getCrm();

                    }
                }
            }
        }
        for (int i = 0; i < cbxPacienteAlt.getItemCount(); i++) {
            if (cbxPacienteAlt.getItemAt(i).toString().equals(consulta.getPaciente().getNome())) {
                cbxPacienteAlt.setSelectedIndex(i);
                for (PacienteModel paciente : pacientes) {
                    if (cbxPacienteAlt.getItemAt(i).toString().equals(paciente.getNome())) {
                        cpf = paciente.getCpf();
                    }
                }
            }
        }

        cbxDiaAlt.setSelectedIndex(consulta.getData().getDayOfMonth() - 1);
        cbxMesAlt.setSelectedIndex(consulta.getData().getMonthValue() - 1);
        if (consulta.getData().getYear() == 2000) {
            cbxAnoAlt.setSelectedIndex(consulta.getData().getYear() - 2000);

        } else {
            cbxAnoAlt.setSelectedIndex(consulta.getData().getYear() - 2001);
        }
        cbxHoraAlt.setSelectedIndex(consulta.getHora().getHour());
        cbxMinAlt.setSelectedIndex(consulta.getHora().getMinute());
    }//GEN-LAST:event_cbxConsultaAltItemStateChanged

    private void cbxConsultaExcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxConsultaExcItemStateChanged
        ConsultaModel consulta = consultas.get(cbxConsultaExc.getSelectedIndex());

        tfMedicoExc.setText(consulta.getMedico().getNome());
        tfPacienteExc.setText(consulta.getPaciente().getNome());
        tfDataExc.setText(consulta.getData().toString());
        tfHoraExc.setText(consulta.getHora().toString());
    }//GEN-LAST:event_cbxConsultaExcItemStateChanged

    private void btnDataHoraAtualCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataHoraAtualCadActionPerformed

        LocalDateTime dataHora = LocalDateTime.now();

        if (dataHora.getYear() == 2000) {
            cbxAnoCad.setSelectedIndex(dataHora.getYear() - 2000);

        } else {
            cbxAnoCad.setSelectedIndex(dataHora.getYear() - 2001);
        }
        cbxDiaCad.setSelectedIndex(dataHora.getDayOfMonth() - 1);
        cbxMesCad.setSelectedIndex(dataHora.getMonthValue() - 1);
        cbxHoraCad.setSelectedIndex(dataHora.getHour());
        cbxMinCad.setSelectedIndex(dataHora.getMinute());

    }//GEN-LAST:event_btnDataHoraAtualCadActionPerformed

    private void btnDataHoraAtualAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataHoraAtualAltActionPerformed
        LocalDateTime dataHora = LocalDateTime.now();
        cbxDiaAlt.setSelectedIndex(dataHora.getDayOfMonth() - 1);
        cbxMesAlt.setSelectedIndex(dataHora.getMonthValue() - 1);
        cbxAnoAlt.setSelectedIndex(dataHora.getYear() - 2001);
        cbxHoraAlt.setSelectedIndex(dataHora.getHour());
        cbxMinAlt.setSelectedIndex(dataHora.getMinute());    }//GEN-LAST:event_btnDataHoraAtualAltActionPerformed

    private void btnSalvarAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAltActionPerformed

        MedicoModel medico = medicos.get(cbxMedicoAlt.getSelectedIndex());
        PacienteModel paciente = pacientes.get(cbxPacienteAlt.getSelectedIndex());
        int dia, mes, ano;
        dia = cbxDiaAlt.getSelectedIndex() + 1;
        mes = cbxMesAlt.getSelectedIndex() + 1;
        ano = Integer.parseInt(cbxAnoAlt.getSelectedItem().toString());
        LocalDate data = LocalDate.of(ano, mes, dia);
        LocalTime hora = LocalTime.of(cbxHoraAlt.getSelectedIndex(), cbxMinAlt.getSelectedIndex());

        ConsultaModel consulta = consultas.get(cbxConsultaAlt.getSelectedIndex());
        consulta.setMedico(medico);
        consulta.setPaciente(paciente);
        consulta.setData(data);
        consulta.setHora(hora);

        int ret = consultaDao.alterar(consulta, crm, cpf);
        if (ret == 1) {
            JOptionPane.showConfirmDialog(this, "Alterado com sucesso !", "Alterar", JOptionPane.DEFAULT_OPTION);
            if (JOptionPane.DEFAULT_OPTION == -1) {
                dispose();
            }
        }


    }//GEN-LAST:event_btnSalvarAltActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        int op = JOptionPane.showInternalConfirmDialog(this, "Quer mesmo Excluir ?", "Excluir",
                JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            ConsultaModel consulta = consultas.get(cbxConsultaExc.getSelectedIndex());
            int ret = consultaDao.excluir(consulta);
            if (ret == 1) {
                JOptionPane.showConfirmDialog(this, "Excluido com sucesso !", "Excluir", JOptionPane.DEFAULT_OPTION);
                if (JOptionPane.DEFAULT_OPTION == -1) {
                    dispose();
                }
            }
            dispose();
        }

    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnFecharConsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharConsActionPerformed
        fechar();

    }//GEN-LAST:event_btnFecharConsActionPerformed

    private void btnFecharAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharAltActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharAltActionPerformed

    private void btnFecharExcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharExcActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharExcActionPerformed

    public void selecionado(Opcao op) {
        if (op == opcao.CADASTRAR) {
            jTabbedPane1.setSelectedIndex(0);
            medicos = medicoDao.listar();
            pacientes = pacienteDao.listar();
            carregaCamposMedPac(cbxMedicoCad, cbxPacienteCad);
            if (medicos == null || medicos.isEmpty()) {
                btnSalvarCad.setEnabled(false);

            } else {
                btnSalvarCad.setEnabled(true);
            }
            if (pacientes == null || pacientes.isEmpty()) {
                btnSalvarCad.setEnabled(false);

            } else {
                btnSalvarCad.setEnabled(true);

            }
        }
        if (op == opcao.CONSULTAR) {
            jTabbedPane1.setSelectedIndex(1);
            consultas = consultaDao.listar();
            CarregaCamposConsu(cbxConsultaCons);

        }
        if (op == opcao.ALTERAR) {
            jTabbedPane1.setSelectedIndex(2);
            medicos = medicoDao.listar();
            pacientes = pacienteDao.listar();
            carregaCamposMedPac(cbxMedicoCad, cbxPacienteCad);
            consultas = consultaDao.listar();
            CarregaCamposConsu(cbxConsultaAlt);
            if (consultas == null || consultas.isEmpty()) {
                btnSalvarAlt.setEnabled(false);
            } else {
                btnSalvarAlt.setEnabled(true);
            }

        }
        if (op == opcao.EXCLUIR) {
            jTabbedPane1.setSelectedIndex(3);
            consultas = consultaDao.listar();
            CarregaCamposConsu(cbxConsultaExc);
            if (consultas == null || consultas.isEmpty()) {
                btnExcluir.setEnabled(false);
            } else {
                btnExcluir.setEnabled(true);
            }

        }
    }

    public void limparCampos(JPanel jpanel) {
        Component[] com = jpanel.getComponents();
        for (Component component : com) {
            if (component instanceof JTextField) {
                JTextField tf = (JTextField) component;
                tf.setText("");

            }
        }

    }

    public void habilitarCampos(JPanel jpanel, boolean habilita) {
        Component[] com = jpanel.getComponents();
        for (Component component : com) {
            if (component instanceof JTextField) {
                JTextField tf = (JTextField) component;
                tf.setEnabled(habilita);

            }
        }

    }

    public int VerificaCampos(JPanel jpanel) {
        Component[] com = jpanel.getComponents();
        int cont = 0;
        for (Component component : com) {
            if (component instanceof JTextField) {
                JTextField tf = (JTextField) component;
                if (!tf.getText().equals("")) {
                    cont += 1;
                }
            }
        }
        return cont;
    }

    public void fechar() {
        int op = JOptionPane.showInternalConfirmDialog(this, "Quer mesmo Fechar ?", "Fechar",
                JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            dispose();
        }
    }

    public void carregaCamposMedPac(JComboBox cbxMed, JComboBox cbxPac) {

        cbxMed.removeAllItems();
        cbxPac.removeAllItems();

        if (medicos == null || medicos.isEmpty()) {

        } else {
            for (MedicoModel medico : medicos) {
                cbxMed.addItem(medico.getNome());
            }

        }
        if (pacientes == null || pacientes.isEmpty()) {
        } else {
            for (PacienteModel paciente : pacientes) {
                cbxPac.addItem(paciente.getNome());
            }

        }

    }

    public void CarregaCamposConsu(JComboBox cbxCons) {
        if (consultas == null || consultas.isEmpty()) {

        } else {
            for (int i = 0; i < consultas.size(); i++) {
                cbxCons.addItem("" + (i + 1) + "- Medico: " + consultas.get(i).getMedico().getNome() + "  Paciente: " + consultas.get(i).getPaciente().getNome());

            }

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel alterar;
    private javax.swing.JButton btnDataHoraAtualAlt;
    private javax.swing.JButton btnDataHoraAtualCad;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFecharAlt;
    private javax.swing.JButton btnFecharCad;
    private javax.swing.JButton btnFecharCons;
    private javax.swing.JButton btnFecharExc;
    private javax.swing.JButton btnSalvarAlt;
    private javax.swing.JButton btnSalvarCad;
    private javax.swing.JPanel cadastrar;
    private javax.swing.JComboBox<String> cbxAnoAlt;
    private javax.swing.JComboBox<String> cbxAnoCad;
    private javax.swing.JComboBox<String> cbxConsultaAlt;
    private javax.swing.JComboBox<String> cbxConsultaCons;
    private javax.swing.JComboBox<String> cbxConsultaExc;
    private javax.swing.JComboBox<String> cbxDiaAlt;
    private javax.swing.JComboBox<String> cbxDiaCad;
    private javax.swing.JComboBox<String> cbxHoraAlt;
    private javax.swing.JComboBox<String> cbxHoraCad;
    private javax.swing.JComboBox<String> cbxMedicoAlt;
    private javax.swing.JComboBox<String> cbxMedicoCad;
    private javax.swing.JComboBox<String> cbxMesAlt;
    private javax.swing.JComboBox<String> cbxMesCad;
    private javax.swing.JComboBox<String> cbxMinAlt;
    private javax.swing.JComboBox<String> cbxMinCad;
    private javax.swing.JComboBox<String> cbxPacienteAlt;
    private javax.swing.JComboBox<String> cbxPacienteCad;
    private javax.swing.JPanel consultar;
    private javax.swing.JPanel excluir;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jlDataAlt;
    private javax.swing.JLabel jlDataCad;
    private javax.swing.JLabel jlDataCons;
    private javax.swing.JLabel jlDataExc;
    private javax.swing.JLabel jlHoraAlt;
    private javax.swing.JLabel jlHoraCad;
    private javax.swing.JLabel jlHoraCons;
    private javax.swing.JLabel jlHoraExc;
    private javax.swing.JLabel jlMedicoAlt;
    private javax.swing.JLabel jlMedicoCad;
    private javax.swing.JLabel jlMedicoCons;
    private javax.swing.JLabel jlMedicoExc;
    private javax.swing.JLabel jlPacienteAlt;
    private javax.swing.JLabel jlPacienteCad;
    private javax.swing.JLabel jlPacienteCons;
    private javax.swing.JLabel jlPacienteExc;
    private javax.swing.JLabel jlSelecioneAlt;
    private javax.swing.JLabel jlSelecioneCad;
    private javax.swing.JLabel jlSelecioneConsultaAlt;
    private javax.swing.JLabel jlSelecioneConsultaCons;
    private javax.swing.JLabel jlSelecioneConsultaEx;
    private javax.swing.JPanel jpCamposAlt;
    private javax.swing.JPanel jpCamposCad;
    private javax.swing.JPanel jpCamposCons;
    private javax.swing.JPanel jpExclui;
    private javax.swing.JTextField tfDataCons;
    private javax.swing.JTextField tfDataExc;
    private javax.swing.JTextField tfHoraCons;
    private javax.swing.JTextField tfHoraExc;
    private javax.swing.JTextField tfMedicoCons;
    private javax.swing.JTextField tfMedicoExc;
    private javax.swing.JTextField tfPacienteCons;
    private javax.swing.JTextField tfPacienteExc;
    // End of variables declaration//GEN-END:variables
}
